
class DRDeviceRef : _CFObject {
}
@available(macOS 10.2, *)
func DRDeviceGetTypeID() -> CFTypeID
@available(macOS 10.2, *)
func DRCopyDeviceArray() -> Unmanaged<CFArray>!
@available(macOS 10.2, *)
func DRDeviceCopyDeviceForBSDName(_ name: CFString!) -> Unmanaged<DRDeviceRef>!
@available(macOS 10.2, *)
func DRDeviceCopyDeviceForIORegistryEntryPath(_ path: CFString!) -> Unmanaged<DRDeviceRef>!
@available(macOS 10.2, *)
func DRDeviceIsValid(_ device: DRDeviceRef!) -> Bool
@available(macOS 10.2, *)
func DRDeviceOpenTray(_ device: DRDeviceRef!) -> OSStatus
@available(macOS 10.2, *)
func DRDeviceCloseTray(_ device: DRDeviceRef!) -> OSStatus
@available(macOS 10.2, *)
func DRDeviceEjectMedia(_ device: DRDeviceRef!) -> OSStatus
@available(macOS 10.2, *)
func DRDeviceAcquireMediaReservation(_ device: DRDeviceRef!)
@available(macOS 10.2, *)
func DRDeviceReleaseMediaReservation(_ device: DRDeviceRef!)
@available(macOS 10.2, *)
func DRDeviceAcquireExclusiveAccess(_ device: DRDeviceRef!) -> OSStatus
@available(macOS 10.2, *)
func DRDeviceReleaseExclusiveAccess(_ device: DRDeviceRef!)
@available(macOS 10.2, *)
func DRDeviceCopyInfo(_ device: DRDeviceRef!) -> Unmanaged<CFDictionary>!
@available(macOS 10.2, *)
func DRDeviceCopyStatus(_ device: DRDeviceRef!) -> Unmanaged<CFDictionary>!
@available(macOS 10.2, *)
let kDRDeviceAppearedNotification: CFString!
@available(macOS 10.2, *)
let kDRDeviceDisappearedNotification: CFString!
@available(macOS 10.2, *)
let kDRDeviceStatusChangedNotification: CFString!
@available(macOS 10.2, *)
let kDRDeviceSupportLevelKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceIORegistryEntryPathKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceVendorNameKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceProductNameKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceFirmwareRevisionKey: CFString!
@available(macOS 10.2, *)
let kDRDevicePhysicalInterconnectKey: CFString!
@available(macOS 10.2, *)
let kDRDevicePhysicalInterconnectLocationKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceWriteCapabilitiesKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceLoadingMechanismCanEjectKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceLoadingMechanismCanInjectKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceLoadingMechanismCanOpenKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceWriteBufferSizeKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceSupportLevelNone: CFString!
@available(macOS 10.3, *)
let kDRDeviceSupportLevelUnsupported: CFString!
@available(macOS 10.2, *)
let kDRDeviceSupportLevelVendorSupported: CFString!
@available(macOS 10.2, *)
let kDRDeviceSupportLevelAppleSupported: CFString!
@available(macOS 10.2, *)
let kDRDeviceSupportLevelAppleShipping: CFString!
@available(macOS 10.2, *)
let kDRDevicePhysicalInterconnectATAPI: CFString!
@available(macOS 10.3, *)
let kDRDevicePhysicalInterconnectFibreChannel: CFString!
@available(macOS 10.2, *)
let kDRDevicePhysicalInterconnectFireWire: CFString!
@available(macOS 10.2, *)
let kDRDevicePhysicalInterconnectUSB: CFString!
@available(macOS 10.2, *)
let kDRDevicePhysicalInterconnectSCSI: CFString!
@available(macOS 10.2, *)
let kDRDevicePhysicalInterconnectLocationInternal: CFString!
@available(macOS 10.2, *)
let kDRDevicePhysicalInterconnectLocationExternal: CFString!
@available(macOS 10.2, *)
let kDRDevicePhysicalInterconnectLocationUnknown: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanWriteKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanWriteCDKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanWriteCDRKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanWriteCDRWKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanWriteDVDKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanWriteDVDRKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteDVDRDualLayerKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanWriteDVDRWKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteDVDRWDualLayerKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanWriteDVDRAMKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceCanWriteDVDPlusRKey: CFString!
@available(macOS 10.4, *)
let kDRDeviceCanWriteDVDPlusRDoubleLayerKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceCanWriteDVDPlusRWKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteDVDPlusRWDoubleLayerKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteBDKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteBDRKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteBDREKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteHDDVDKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteHDDVDRKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteHDDVDRDualLayerKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteHDDVDRAMKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteHDDVDRWKey: CFString!
@available(macOS 10.5, *)
let kDRDeviceCanWriteHDDVDRWDualLayerKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanWriteCDTextKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceCanWriteIndexPointsKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceCanWriteISRCKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceCanWriteCDTAOKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceCanWriteCDSAOKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceCanWriteCDRawKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceCanWriteDVDDAOKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanTestWriteCDKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanTestWriteDVDKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanUnderrunProtectCDKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCanUnderrunProtectDVDKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceIsBusyKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceIsTrayOpenKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMaximumWriteSpeedKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceCurrentWriteSpeedKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaStateKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaInfoKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceBurnSpeedsKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceTrackRefsKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceTrackInfoKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaStateMediaPresent: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaStateInTransition: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaStateNone: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaBSDNameKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaIsBlankKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaIsAppendableKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceMediaIsOverwritableKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaIsErasableKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaIsReservedKey: CFString!
@available(macOS 10.3, *)
let kDRDeviceMediaBlocksOverwritableKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaBlocksFreeKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaBlocksUsedKey: CFString!
@available(macOS 10.4, *)
let kDRDeviceMediaDoubleLayerL0DataZoneBlocksKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTrackCountKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaSessionCountKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaClassKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeKey: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaClassCD: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaClassDVD: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaClassBD: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaClassHDDVD: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaClassUnknown: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeCDROM: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeCDR: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeCDRW: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeDVDROM: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeDVDRAM: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeDVDR: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeDVDRDualLayer: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeDVDRW: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeDVDRWDualLayer: CFString!
@available(macOS 10.3, *)
let kDRDeviceMediaTypeDVDPlusR: CFString!
@available(macOS 10.4, *)
let kDRDeviceMediaTypeDVDPlusRDoubleLayer: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeDVDPlusRW: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeDVDPlusRWDoubleLayer: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeBDR: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeBDRE: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeBDROM: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeHDDVDROM: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeHDDVDR: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeHDDVDRDualLayer: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeHDDVDRAM: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeHDDVDRW: CFString!
@available(macOS 10.5, *)
let kDRDeviceMediaTypeHDDVDRWDualLayer: CFString!
@available(macOS 10.2, *)
let kDRDeviceMediaTypeUnknown: CFString!
@available(macOS 10.2, *)
let kDRDeviceBurnSpeedCD1x: Float
@available(macOS 10.2, *)
let kDRDeviceBurnSpeedDVD1x: Float
@available(macOS 10.5, *)
let kDRDeviceBurnSpeedBD1x: Float
@available(macOS 10.5, *)
let kDRDeviceBurnSpeedHDDVD1x: Float
@available(macOS 10.2, *)
let kDRDeviceBurnSpeedMax: Float
@available(macOS 10.5, *)
func DRDeviceKPSForXFactor(_ deviceOrMediaType: DRType!, _ xfactor: Float) -> Float
@available(macOS 10.5, *)
func DRDeviceXFactorForKPS(_ deviceOrMediaType: DRType!, _ kps: Float) -> Float
